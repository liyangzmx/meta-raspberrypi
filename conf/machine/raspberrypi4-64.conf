#@TYPE: Machine
#@NAME: RaspberryPi 4 Development Board (64bit)
#@DESCRIPTION: Machine configuration for the RaspberryPi 4 in 64 bits mode

# machine覆盖
MACHINEOVERRIDES = "raspberrypi4:${MACHINE}"

# machine附加的特性, 这里要支持pci, 这将导致packagegroup-base-pci被附加
# pciutils将被编译
MACHINE_FEATURES += "pci"

# 为要生成的映像的一部分安装的特定于计算机的软件包的列表
# 这将导致来自git://github.com/RPi-Distro/firmware-nonfree库的:
# 	firmware-nonfree/brcm/brcmfmac43430*被安装
# git://github.com/RPi-Distro/bluez-firmware库的:
# 	firmware-nonfree/firmware/brcm/BCM4345C0.hcd被安装
# 对应的配置文件:
# 	recipes-kernel/linux-firmware-rpidistro/linux-firmware-rpidistro_git.bb
#	recipes-kernel/bluez-firmware-rpidistro/bluez-firmware-rpidistro_git.bb
MACHINE_EXTRA_RRECOMMENDS += "\
    linux-firmware-rpidistro-bcm43455 \
    bluez-firmware-rpidistro-bcm4345c0-hcd \
"

# 包含一些AArch64相关的内容
require conf/machine/include/tune-cortexa72.inc
include conf/machine/include/rpi-base.inc

RPI_KERNEL_DEVICETREE = " \
    broadcom/bcm2711-rpi-4-b.dtb \
    broadcom/bcm2711-rpi-400.dtb \
    broadcom/bcm2711-rpi-cm4.dtb \
"

SDIMG_KERNELIMAGE ?= "kernel8.img"
SERIAL_CONSOLES ?= "115200;ttyS0"

UBOOT_MACHINE = "rpi_arm64_config"

VC4DTBO ?= "vc4-fkms-v3d"

# When u-boot is enabled we need to use the "Image" format and the "booti"
# command to load the kernel
KERNEL_IMAGETYPE_UBOOT ?= "Image"
# "zImage" not supported on arm64 and ".gz" images not supported by bootloader yet
KERNEL_IMAGETYPE_DIRECT ?= "Image"
KERNEL_BOOTCMD ?= "booti"

ARMSTUB ?= "armstub8-gic.bin"
